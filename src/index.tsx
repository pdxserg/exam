import { configureStore, createSlice } from "@reduxjs/toolkit";
import { createRoot } from "react-dom/client";
import { Provider, useDispatch, useSelector } from "react-redux";

// slice
const slice = createSlice({
	name: "waterCounter",
	initialState: {
		liters: 10,
	},
	reducers: {
		count: (state) => {
			console.log(state);
		},
	},
});

const { count } = slice.actions;

// App.tsx
const App = () => {
	const water = useSelector((state: RootState) => state.waterCounter.liters);
	const dispatch = useDispatch();

	return (
		<>
			<button onClick={() => dispatch(count())}>Get Water</button>
			<span>{water} liters</span>
		</>
	);
};

// store.ts
export const store = configureStore({
	reducer: {
		waterCounter: slice.reducer,
	},
});

export type RootState = ReturnType<typeof store.getState>;

// main.ts
createRoot(document.getElementById("root")!).render(
	<Provider store={store}>
		<App />
	</Provider>,
);

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É Get Water
// –í –∫–æ–Ω—Å–æ–ª–∏ –≤—ã —É–≤–∏–¥–∏—Ç–µ —Ç–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
// Proxy(Object) {type_: 0, scope_: {‚Ä¶}, modified_: false, finalized_: false, assigned_: {‚Ä¶},

// ü™õ –ó–∞–¥–∞—á–∞:
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å state —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–æ—Ç —Ç–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç {liters: 10}
// –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞.
