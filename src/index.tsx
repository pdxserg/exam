import { configureStore, createSlice } from "@reduxjs/toolkit";
import { createRoot } from "react-dom/client";
import { Provider, useDispatch, useSelector } from "react-redux";

// slice
const slice = createSlice({
	name: "temperature",
	initialState: {
		celsius: 20,
	},
	reducers: {
		increase: (state) => {
			state.celsius=state.celsius+1
		},
	},
});

const { increase } = slice.actions;

// App.tsx
const App = () => {
	const temp = useSelector((state: RootState) => state.temperature.celsius);
	const dispatch = useDispatch();

	return (
		<>
			<button onClick={() => dispatch(increase())}>Increase Temp</button>
			<span>{temp}¬∞C</span>
		</>
	);
};

// store.ts
export const store = configureStore({
	reducer: {
		temperature: slice.reducer,
	},
});

export type RootState = ReturnType<typeof store.getState>;

// main.ts
createRoot(document.getElementById("root")!).render(
	<Provider store={store}>
		<App />
	</Provider>,
);

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Increase Temp —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è ü•≤

// ü™õ –ó–∞–¥–∞—á–∞:
// –ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–µ–π—Ç–∞ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Increase Temp,
// —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–ª–∞—Å—å –Ω–∞ 1 –≥—Ä–∞–¥—É—Å
// –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞.
// ‚ùó–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–µ–π—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–æ –º—É—Ç–∞–±–µ–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
