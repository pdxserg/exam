import { configureStore } from "@reduxjs/toolkit";
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { createRoot } from "react-dom/client";
import { Provider } from "react-redux";

type Photo = {
	albumId: string;
	id: string;
	title: string;
	url: string;
};

// Api
const api = createApi({
	reducerPath: "api",
	baseQuery: fetchBaseQuery({ baseUrl: "https://exams-frontend.kimitsu.it-incubator.io/api/" }),
	endpoints: (builder) => {
		return {
			getPhotos: builder.query<Photo[], void>({
				query: () => "photos",
			}),
			updatePhoto: builder.mutation<Photo, { id: string; title: string }>({
				query: ({ id, title }) => {
					return {
						method: "PUT",
						url: `photos/${id}`,
						body: { title },
					};
				},
			}),
		};
	},
});

const { useGetPhotosQuery, useUpdatePhotoMutation } = api;

// App.tsx
const App = () => {
	const { data } = useGetPhotosQuery();
	const [trigger] = useUpdatePhotoMutation();

	const updatePhotoTitleHandler = (id: string) => {
		trigger({ id, title: "–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ" });
	};

	return (
		<>
			{data?.map((el) => {
				return (
					<div key={el.id} style={{ margin: "15px" }}>
						<b>title</b> - {el.title}
						<button onClick={() => updatePhotoTitleHandler(el.id)}>Update title</button>
					</div>
				);
			})}
		</>
	);
};

// store.ts
const store = configureStore({
	reducer: { [api.reducerPath]: api.reducer },
	middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),
});

createRoot(document.getElementById("root")!).render(
	<Provider store={store}>
		<App />
	</Provider>,
);

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É Update title –∏ –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É. –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã title
// –∏–∑–º–µ–Ω–∏—Ç—Å—è, –Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É

// ü™õ –ó–∞–¥–∞—á–∞:
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π re-fetching –∏—Å–ø–æ–ª—å–∑—É—è —Ç–µ–≥–∏. –¢.–µ. —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É Update title, title –æ–±–Ω–æ–≤–∏–ª—Å—è –±–µ–∑ —Ä—É—á–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// –æ–±–Ω–æ–≤–∏–ª—Å—è –±–µ–∑ —Ä—É—á–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

// üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–∏—Å–∞—Ç—å 3 —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞
// –í –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∂–∏—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∫–æ–¥–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
// ‚ùó–ó–∞–ø—è—Ç—É—é –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏ —É–∫–∞–∑—ã–≤–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ

// üñ• –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: xxx: {id: 1}, yyy: {id: 2}, zzz: {id: 3}
