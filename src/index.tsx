import { configureStore, createSlice } from "@reduxjs/toolkit"
import { createRoot } from "react-dom/client"
import { Provider, useDispatch, useSelector } from "react-redux"

// slice
const slice = createSlice({
	name: "library",
	initialState: {
		collection: {
			books: [
				{ id: 1, title: "1984" },
				{ id: 2, title: "Brave New World" },
			],
		},
	},
	reducers: {
		removeBook: (state, action) => {
			return state
		},
	},
})

const { removeBook } = slice.actions

// App.tsx
const App = () => {
	const books = useSelector((state: RootState) => state.library.collection.books)
	const dispatch = useDispatch()

	const removeLastBook = () => {
		if (books.length > 0) {
			dispatch(removeBook(books[books.length - 1].id))
		}
	}

	return (
		<>
			<button onClick={removeLastBook}>Remove Last Book</button>
			<ul>
				{books.map((book) => (
					<li key={book.id}>{book.title}</li>
				))}
			</ul>
		</>
	)
}

// store.ts
export const store = configureStore({
	reducer: {
		library: slice.reducer,
	},
})

export type RootState = ReturnType<typeof store.getState>

// main.ts
createRoot(document.getElementById("root")!).render(
	<Provider store={store}>
		<App />
	</Provider>,
)

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Remove Last Book, –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–∏–≥–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è ü•≤

// ü™õ –ó–∞–¥–∞—á–∞:
// –ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–µ–π—Ç–∞ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Remove Last Book,
// –ø–æ—Å–ª–µ–¥–Ω—è—è –∫–Ω–∏–≥–∞ —É–¥–∞–ª—è–ª–∞—Å—å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.
// –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞.
// ‚ùó–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–µ–π—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–æ –º—É—Ç–∞–±–µ–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º.