import { configureStore } from "@reduxjs/toolkit";
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { createRoot } from "react-dom/client";
import { Provider } from "react-redux";

type Comment = {
	postId: string;
	id: string;
	name: string;
	email: string;
	body: string;
};

// Api
const api = createApi({
	reducerPath: "commentsApi",
	baseQuery: fetchBaseQuery({ baseUrl: "https://exams-frontend.kimitsu.it-incubator.io/api/" }),
	endpoints: (builder) => {
		return {
			getComments: builder.query<Comment[], void>({
				query: () => "comments",
			}),
			// ‚ùó‚ùó‚ùóXXX‚ùó‚ùó‚ùó
		};
	},
});

const { useGetCommentsQuery, useAddCommentMutation } = api;

// App.tsx
const App = () => {
	const { data } = useGetCommentsQuery();
	const [addComment] = useAddCommentMutation();

	const addCommentHandler = () => {
		addComment("–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞. –ï–µ –º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ");
	};

	return (
		<>
			<button onClick={addCommentHandler}>Add comment</button>
			{data?.map((el) => {
				return (
					<div key={el.id} style={{ border: "1px solid", margin: "5px", padding: "5px" }}>
						<p>body - {el.body}</p>
					</div>
				);
			})}
		</>
	);
};

// store.ts
const store = configureStore({
	reducer: {
		[api.reducerPath]: api.reducer,
	},
	middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(api.middleware),
});

createRoot(document.getElementById("root")!).render(
	<Provider store={store}>
		<App />
	</Provider>,
);

// üìú –û–ø–∏—Å–∞–Ω–∏–µ:
// –ë–µ–ª—ã–π —ç–∫—Ä–∞–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –ø–∞–Ω–µ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –≤ —á–µ–º –æ—à–∏–±–∫–∞

// ü™õ –ó–∞–¥–∞—á–∞:
// –ß—Ç–æ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–º–µ—Å—Ç–æ `// ‚ùó‚ùó‚ùóXXX‚ùó‚ùó‚ùó` —á—Ç–æ–±—ã –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É `Add comment`
// –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª—è–ª—Å—è –∏ –±—ã–ª –≤–∏–¥–µ–Ω –≤ –∫–æ–Ω—Ü–µ –º–∞—Å—Å–∏–≤–∞ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞
// ‚ùó –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –Ω–µ –Ω–∞–¥–æ
// –í –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –≤–∞–º–∏ –∫–æ–¥
// ‚ùó–¢–∏–ø–∏–∑–∞—Ü–∏—é —É–∫–∞–∑—ã–≤–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ